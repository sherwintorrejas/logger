/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InternalPages;

import config.dbconnector;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author SCC-PC10
 */
public class details extends javax.swing.JInternalFrame {
DefaultTableModel model;
    /**
     * Creates new form details
     */
    public details() {
        initComponents();
        
         displayData();
        
         displayData();
        
         
         
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
    }
    
     public void displayData(){
       
        try{
       
            dbconnector dbc = new dbconnector();
            ResultSet rst = dbc.getData("SELECT * FROM tbl_books");
            book_table.setModel(DbUtils.resultSetToTableModel(rst));
       
            DefaultTableModel model;
            model = (DefaultTableModel)
            book_table.getModel();
            String[]columnIdentifiers = {"ISBN","NAME","AUTHOR","QUANTITY"};
            model.setColumnIdentifiers(columnIdentifiers);
        }catch(SQLException ex){
            System.out.println("Error Message: "+ex.getMessage());
       
        }
    }
     public void reset(){
            
            bid.setText("");
            bname.setText("");
            bauthor.setText("");
            bquantity.setText("");
        }
     
public void fillTable()throws SQLException{
        dbconnector dbc = new dbconnector();
        ResultSet rst = dbc.getData("SELECT * FROM tbl_books");
         book_table.setModel(DbUtils.resultSetToTableModel(rst));
  
            model = (DefaultTableModel)
            book_table.getModel();
            String[]columnIdentifiers = {"ISBN","NAME","AUTHOR","QUANTITY"};
            model.setColumnIdentifiers(columnIdentifiers);
        }

     public boolean validation(){
  String isbn= bid.getText();
String tittle= bname.getText();
String AUTHOR= bauthor.getText();
String quantity= bquantity.getText();
 if (isbn.equals("")){
 JOptionPane.showMessageDialog(this, "PLEASE ENTER ISBN");
 return false;
 }
 if(tittle.equals("")){
 JOptionPane.showMessageDialog(this, "PLEASE ENTER BOOK TITTLE");
 return false;
 }     
 if(AUTHOR.equals("")){
 JOptionPane.showMessageDialog(this, "PLEASE ENTER AUTHOR");
 return false;
 }    
   if(quantity.equals("")){
 JOptionPane.showMessageDialog(this, "PLEASE ENTER QUANTITY");
 return false;
 }      
   return true;  
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        book_table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        bquantity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        b_search = new javax.swing.JTextField();
        bname = new javax.swing.JTextField();
        bauthor = new javax.swing.JTextField();
        search1 = new javax.swing.JButton();
        bid = new javax.swing.JTextField();
        b_add = new javax.swing.JButton();
        b_clear = new javax.swing.JButton();
        b_delete = new javax.swing.JButton();
        b_update = new javax.swing.JButton();
        b_print = new javax.swing.JButton();
        b_refresh = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(826, 477));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("BOOK DETAILS");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 320, 30);

        book_table.setAutoCreateRowSorter(true);
        book_table.setBackground(new java.awt.Color(204, 204, 255));
        book_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "NAME", "AUTHOR", "QUANTITIY"
            }
        ));
        book_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                book_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(book_table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 610, 150);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("QUANTITY:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 330, 90, 30);

        bquantity.setBackground(new java.awt.Color(204, 204, 255));
        bquantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bquantityActionPerformed(evt);
            }
        });
        jPanel1.add(bquantity);
        bquantity.setBounds(100, 330, 190, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("ISBN:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 210, 90, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("BOOK NAME:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 250, 90, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("AUTHOR:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 290, 90, 30);

        b_search.setBackground(new java.awt.Color(204, 204, 255));
        b_search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        b_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_searchActionPerformed(evt);
            }
        });
        jPanel1.add(b_search);
        b_search.setBounds(330, 210, 190, 30);

        bname.setBackground(new java.awt.Color(204, 204, 255));
        bname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnameActionPerformed(evt);
            }
        });
        jPanel1.add(bname);
        bname.setBounds(100, 250, 190, 30);

        bauthor.setBackground(new java.awt.Color(204, 204, 255));
        bauthor.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bauthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bauthorActionPerformed(evt);
            }
        });
        jPanel1.add(bauthor);
        bauthor.setBounds(100, 290, 190, 30);

        search1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        search1.setText("SEARCH");
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });
        jPanel1.add(search1);
        search1.setBounds(530, 210, 90, 30);

        bid.setBackground(new java.awt.Color(204, 204, 255));
        bid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidActionPerformed(evt);
            }
        });
        jPanel1.add(bid);
        bid.setBounds(100, 210, 190, 30);

        b_add.setBackground(new java.awt.Color(204, 204, 255));
        b_add.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b_add.setText("ADD");
        b_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_addActionPerformed(evt);
            }
        });
        jPanel1.add(b_add);
        b_add.setBounds(10, 370, 90, 30);

        b_clear.setBackground(new java.awt.Color(204, 204, 255));
        b_clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b_clear.setText("CLEAR");
        b_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clearActionPerformed(evt);
            }
        });
        jPanel1.add(b_clear);
        b_clear.setBounds(110, 370, 100, 30);

        b_delete.setBackground(new java.awt.Color(204, 204, 255));
        b_delete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b_delete.setText("DELETE");
        b_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_deleteActionPerformed(evt);
            }
        });
        jPanel1.add(b_delete);
        b_delete.setBounds(220, 370, 90, 30);

        b_update.setBackground(new java.awt.Color(204, 204, 255));
        b_update.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b_update.setText("UPDATE");
        b_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updateActionPerformed(evt);
            }
        });
        jPanel1.add(b_update);
        b_update.setBounds(320, 370, 90, 30);

        b_print.setBackground(new java.awt.Color(204, 204, 255));
        b_print.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b_print.setText("PRINT");
        b_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_printActionPerformed(evt);
            }
        });
        jPanel1.add(b_print);
        b_print.setBounds(420, 370, 90, 30);

        b_refresh.setBackground(new java.awt.Color(204, 204, 255));
        b_refresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b_refresh.setText("REFRESH");
        b_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_refreshActionPerformed(evt);
            }
        });
        jPanel1.add(b_refresh);
        b_refresh.setBounds(520, 370, 95, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void book_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_book_tableMouseClicked
        int selectedRow = book_table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) book_table.getModel();
        bid.setText(model.getValueAt(selectedRow, 0).toString());
        bname.setText(model.getValueAt(selectedRow, 1).toString());
        bauthor.setText(model.getValueAt(selectedRow, 2).toString());
        bquantity.setText(model.getValueAt(selectedRow, 3).toString());

    }//GEN-LAST:event_book_tableMouseClicked

    private void bquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bquantityActionPerformed

    private void b_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_searchActionPerformed

    private void bnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bnameActionPerformed

    private void bauthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bauthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bauthorActionPerformed

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) book_table.getModel();
        TableRowSorter<DefaultTableModel> obj  = new TableRowSorter<>(model);
        book_table.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(search1.getText())); 
    }//GEN-LAST:event_search1ActionPerformed

    private void bidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bidActionPerformed

    private void b_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_addActionPerformed
         if(validation()== true){     
             
            dbconnector dbc = new dbconnector();
         
        dbc.insertData("INSERT INTO tbl_books (b_name, b_author, b_quantity) "
       + "VALUES ('"+bname.getText()+"','"+bauthor.getText()+"','"+bquantity.getText()+" ')");
        
        displayData();
        reset();
         }
    }//GEN-LAST:event_b_addActionPerformed

    private void b_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clearActionPerformed
            bid.setText(null);   
            bname.setText(null);  
            bauthor.setText(null); 
            bquantity.setText(null);  
    }//GEN-LAST:event_b_clearActionPerformed

    private void b_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_deleteActionPerformed
        int rowIndex = book_table.getSelectedRow();
       if(rowIndex < 0){
           JOptionPane.showMessageDialog(null, "Please select a data first");
       }else{
            TableModel model = book_table.getModel();
            Object value = model.getValueAt(rowIndex, 0);
            String ISBN = value.toString();
             int a=JOptionPane.showConfirmDialog(null,"Are you sure?");  
                    if(a==JOptionPane.YES_OPTION){  
                            dbconnector dbc = new dbconnector();
                            dbc.deleteData1(Integer.parseInt(ISBN));
                            displayData();
                            reset();
                    }    
       }           
    }//GEN-LAST:event_b_deleteActionPerformed

    private void b_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updateActionPerformed
  if(validation()== true){
        dbconnector dbc = new dbconnector();
        int num = dbc.updateData("UPDATE tbl_books "
                + "SET b_name = '"+bname.getText()+"', b_author='"+bauthor.getText()+"', b_quantity='"+bquantity.getText()+"'"
                                + "WHERE ISBN = '"+bid.getText()+"'");
       
        if(num == 0){
           
        }else{
           JOptionPane.showMessageDialog(null, "Updated Successfully!");
           displayData();
           reset();
        
        }
                }
    }//GEN-LAST:event_b_updateActionPerformed

    private void b_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_printActionPerformed
       MessageFormat header = new MessageFormat("LIBRARY LOGGER");
        MessageFormat footer = new MessageFormat("Library Logger");
        try{
            book_table.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        }catch(PrinterException e){
            JOptionPane.showMessageDialog(null, "Cannot be print!"+e.getMessage());
        }
    }//GEN-LAST:event_b_printActionPerformed

    private void b_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_refreshActionPerformed
        try {
            fillTable();
        } catch (SQLException ex) {
            Logger.getLogger(logs.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_b_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_add;
    private javax.swing.JButton b_clear;
    private javax.swing.JButton b_delete;
    private javax.swing.JButton b_print;
    private javax.swing.JButton b_refresh;
    private javax.swing.JTextField b_search;
    private javax.swing.JButton b_update;
    private javax.swing.JTextField bauthor;
    private javax.swing.JTextField bid;
    private javax.swing.JTextField bname;
    private javax.swing.JTable book_table;
    private javax.swing.JTextField bquantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search1;
    // End of variables declaration//GEN-END:variables
}
