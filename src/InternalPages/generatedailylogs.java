/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InternalPages;

import config.dbconnector;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HP
 */
public class generatedailylogs extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    
    public generatedailylogs() {
        initComponents();
        
            displayData();
            
             
        model = (DefaultTableModel)
        logs_table.getModel();
         String[]columnIdentifiers = {"ID","NAME","GENDER","ISBN","BOOK NAME","IN","OUT"};
         model.setColumnIdentifiers(columnIdentifiers);
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
  }
    
    public void filter (String qry){
      
           model = (DefaultTableModel)logs_table.getModel();
           TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
           logs_table.setRowSorter(trs);
           
           if (qry== "ALL"){
           logs_table.setRowSorter(trs);
           }else{
           trs.setRowFilter(RowFilter.regexFilter(qry));
           }
    
    }
    
  public void displayData(){
       
        try{
       
            dbconnector dbc = new dbconnector();
            try (ResultSet rst = dbc.getData("SELECT tbl_student.st_id, "
                    + "tbl_student.st_name,"
                    + "tbl_student.st_gender,"
                    + "tbl_books.ISBN,\n"
                    +"tbl_books.b_name,"
                    + "tbl_student.st_in,"
                    + "tbl_student.st_out "
                    + "FROM tbl_logs \n" 
                    +"INNER JOIN tbl_student "
                    + "ON tbl_logs.st_id = tbl_student.st_id \n"
                    +"INNER JOIN tbl_books "
                    + "ON tbl_logs.ISBN = tbl_books.ISBN;; ")) {
                logs_table.setModel(DbUtils.resultSetToTableModel(rst));
                
                model = (DefaultTableModel)
                logs_table.getModel();
                String[]columnIdentifiers = {"ID","NAME","GENDER","ISBN","BOOK NAME","IN","OUT"};
                model.setColumnIdentifiers(columnIdentifiers);
            }
        }catch(SQLException ex){
            System.out.println("Error Message: "+ex.getMessage());
       
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logs_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        print = new javax.swing.JButton();
        Filter = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        logs_table.setBackground(new java.awt.Color(204, 204, 255));
        logs_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "NAME", "GENDER", "ISBN", "BOOK NAME", "TIME IN ", "TIME OUT"
            }
        ));
        jScrollPane1.setViewportView(logs_table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 110, 610, 260);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("LIBRARY REPORT LIST");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 390, 30);

        refresh.setBackground(new java.awt.Color(204, 204, 255));
        refresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel1.add(refresh);
        refresh.setBounds(10, 60, 95, 30);

        print.setBackground(new java.awt.Color(204, 204, 255));
        print.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        print.setText("PRINT");
        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
        });
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        jPanel1.add(print);
        print.setBounds(120, 60, 90, 30);

        Filter.setBackground(new java.awt.Color(204, 204, 255));
        Filter.setEditable(true);
        Filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Male", "Female" }));
        Filter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                FilterItemStateChanged(evt);
            }
        });
        Filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterActionPerformed(evt);
            }
        });
        jPanel1.add(Filter);
        Filter.setBounds(450, 60, 90, 30);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(230, 60, 90, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        displayData();
        
        
        
        
        /*    try {
           
            dbconnector dbc = new dbconnector();
            ResultSet rs = dbc.getData("SELECT tbl_student.st_id,tbl_student.st_name,tbl_books.ISBN,tbl_books.b_name, tbl_student.st_in,tbl_student.st_out FROM tbl_student INNER JOIN tbl_books ON tbl_student.st_id = tbl_books.ISBN");
            logs_table.setModel(DbUtils.resultSetToTableModel(rs)); 
        } catch (SQLException ex) {
            System.out.println("Error Message: " + ex);

        }*/
    }//GEN-LAST:event_refreshActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        MessageFormat header = new MessageFormat("LIBRARY LOGGER");
        MessageFormat footer = new MessageFormat("Library Logger");
        try{
            logs_table.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        }catch(PrinterException e){
            JOptionPane.showMessageDialog(null, "Cannot be print!"+e.getMessage());
        }
    }//GEN-LAST:event_printActionPerformed

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_printMouseClicked

    private void FilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_FilterItemStateChanged
        String qry = Filter.getSelectedItem().toString();
        
        filter(qry);
    }//GEN-LAST:event_FilterItemStateChanged

    private void FilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilterActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int rowindex =logs_table.getSelectedRow();
        if (rowindex < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Item");
        } else {
            print ot = new print();
            TableModel model = logs_table.getModel();
            ot.setVisible(true);
            this.dispose();

            ot.idData.setText("" + model.getValueAt(rowindex, 0));
            ot.idData.setEditable(false);
            ot.studentname.setText("" + model.getValueAt(rowindex, 1));
            ot.studentname.setEditable(false);
            
            ot.gender.setText("" + model.getValueAt(rowindex, 2));
            ot.gender.setEditable(false);
            ot.ISBN.setText(""+ model.getValueAt(rowindex, 3));
            ot.ISBN.setEditable(false);
            ot.bookname.setText("" + model.getValueAt(rowindex, 4));
            ot.bookname.setEditable(false);
            ot.timeIn.setText("" + model.getValueAt(rowindex, 5));
            ot.timeIn.setEditable(false);
            ot.timeOut.setText("" + model.getValueAt(rowindex, 6));
            ot.timeOut.setEditable(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable logs_table;
    private javax.swing.JButton print;
    private javax.swing.JButton refresh;
    // End of variables declaration//GEN-END:variables
}
